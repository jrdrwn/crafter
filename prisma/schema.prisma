generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model languages {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  code     String?    @unique @db.VarChar(10)
  personas personas[]
}

model persona_attributes {
  id                Int       @id @default(autoincrement())
  created_by_system Boolean   @default(false)
  persona_id        Int
  layer             layer
  name              String    @db.VarChar(120)
  human_name        String    @db.VarChar(120)
  description       String?
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  updated_at        DateTime? @default(now()) @db.Timestamp(6)
  personas          personas  @relation(fields: [persona_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([persona_id, layer])
}

model personas {
  id                 Int                  @id @default(autoincrement())
  owner_id           Int
  result             Json?
  max_length         Int?
  detail             String?
  domain             String?              @db.VarChar(120)
  visibility         visibility
  language           Int
  is_archived        Boolean?             @default(false)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  persona_attributes persona_attributes[]
  languages          languages            @relation(fields: [language], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users                @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([owner_id, visibility])
}

model users {
  id         Int        @id @default(autoincrement())
  email      String     @unique @db.VarChar(120)
  password   String     @db.VarChar(255)
  name       String?    @db.VarChar(120)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  personas   personas[]
}

enum layer {
  internal
  external
}

enum visibility {
  private
  public
}
